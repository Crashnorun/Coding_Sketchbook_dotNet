<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <configSections>
    <section name="log4net" type="Log4Net.ConfigurationSectionHandler, log4net"/>
  </configSections>

  <!-- SQL DB Connection strings-->
  <connectionStrings>
    <add name="CrashnorunLogs"
         connectionString="Data source=user-pc\sqlexpress;Database=master;Integrated Security=true;"
         providerName="System.Data.SqlClient"/>

    <!-- <add name="ConnectionString" connectionString="Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\cportelli\Documents\Personal\GitHub\Coding_Sketchbook\dotNet\Log4Net_01\Log4Net_01\CrashnorunLogs.mdf;Integrated Security=True"/>-->
    <add name ="DBConnectionString" connectionString="Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Logs\CrashnorunLogs.mdf;Integrated Security=True"/>
  </connectionStrings>

  <!-- Folder Location for Log-->
  <appSettings>
    <add key="LogDirectory" value="C:\Logs\"/>
  </appSettings>


  <log4net>

    <!-- This is used to display the log in the console -->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date{ABSOLUTE} [%thread] %username %property{log4net:HostName} %level %logger - %message%newline%exception" />
      </layout>
    </appender>

    <!-- This is used to append the log to a text file -->
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <!-- This will create the directory where the errors will be stored-->
      <file value="c:\Logs\Log4Net_FileLog_Config.txt"/>
      <!-- This will add errors to the file, rather then overwriting them-->
      <appendToFile value="true"/>
      <!-- This will allow errors to be writen from multiple classes at the same time-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date, [%thread], %username, %property{log4net:HostName}, %level, %logger, %message%newline%exception" />
        <!--<conversionPattern value="%date{ABSOLUTE} [%thread] %level %logger - %messag%newline%exception" />    -->
      </layout>
    </appender>

    <!-- This is used to append the log to a text file with set maximum limits -->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAPpender">
      <file value="c:\Logs\Log4Net_FileLog_Config.txt"/>
      <appendToFile value ="true"/>
      <rollingStyle value="size"/>

      <!-- this will control the maximum file size-->
      <maximumFileSize value="10mb"/>

      <!-- this will create a maximum of 5 log files of the maximum file size-->
      <maxSizeRollBackups value="5"/>

      <staticLogFileName value="true"/>

      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %username %property{log4net:HostName} %level %logger - %message%newline%exception" />
        <!--<conversionPattern value="%date{ABSOLUTE} [%thread] %level %logger - %messag%newline%exception" />    -->
      </layout>
    </appender>

    <!-- This is used to append log messages to a sql db -->
    <appender name="ADOnetAppender" type="log4net.Appender.ADOnetAppender">
      <!-- builds a buffer of 10 log messages and then writes them to the sql server, this helps with server traffic-->
      <bufferSize value="1"/>
      <connectionType value="System.Data.SqlClient.CqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>

      <!-- uses the local db as the data source; uses the login for the sql server (integrated sercuity=true)-->
      <connectionString value="data source=.; initial catalog=ApplicationDB; integrated security=true;"/>

      <!-- these are two options on how to add data to the DB Option #1 -->
      <commandText value="INSERT INTO Logs ([logDate],[logThread],[username],[hostName],[logLevel],[logger],[logSource],[logMessage],[exception]) VALUES (@log_date, @log_thread, @log_user, @log_host, @log_level, @log_logger, @log_source, @log_message, @exception)"/>
      <commentType value="Text"/>

      <!-- this is Option #2 , both options would never be used at the same time-->
      <!-- <commandText value="dbo.procLog_Insert"/>
      <commandType value="StoredProcedure"/> -->

      <!-- this formats the parameter of log_date-->
      <parameter>
        <parameterName value="@log_date"/>
        <dbType value="DateTime"/>
        <layout type="log4net.Layout.RawTimeStampLayout"/>
      </parameter>

      <parameter>
        <parameterName value ="@log_thread"/>
        <dbType value="AnsiString"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value ="@username"/>
        <dbType value="AnsiString"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%username"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value ="@hostName}"/>
        <dbType value="AnsiString"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%property{log4net:HostName}"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="AnsiString"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@log_source"/>
        <dbType value="AnsiString"/>
        <size value="300"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@log_message"/>
        <dbType value="AnsiString"/>
        <!-- can use varChar Max to store larger size strings-->
        <size value="4000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@exception"/>
        <dbType value="AnsiString"/>
        <size value="4000"/>
        <layout type="log4net.Layout.ExceptionLayout"/>
      </parameter>

    </appender>

    <!-- This is used to append log messages to a MS Access -->
    <appender name="AdoNetAppender_Access" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1" />
      <connectionString value="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\log\access.mdb;User Id=;Password=;" />
      <commandText value="INSERT INTO Log ([logDate],[logThread],[username],[hostName],[logLevel],[logger],[logSource],[logMessage]) VALUES (@log_date, @thread, @username, @hostName, @log_level, @logger, @log_Source, @message)" />

      <parameter>
        <parameterName value="@log_date" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date" />
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>

      <parameter>
        <parameterName value ="@username"/>
        <dbType value="AnsiString"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%username"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value ="@hostName}"/>
        <dbType value="AnsiString"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%property{log4net:HostName}"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@log_Source"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="1024" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>

    </appender>

    <root>
      <!-- Error level types: FATAL, ERROR, WARNING, INFO, DEBUG, OFF, ALL-->
      <level value="Debug"/>
      <appender-ref ref="ConsoleAppender"/>
      <appender-ref ref="FileAppender"/>
      <!-- <appender-ref ref="RollingFileAppender"/> -->
      <!-- <appender-ref ref="ADOnetAppender"/> -->
      <appender-ref ref="AdoNetAppender_Access"/>
    </root>

  </log4net>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
  </startup>

</configuration>
